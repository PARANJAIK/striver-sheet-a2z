class BSTIterator{
        stack<TreeNode*> myStack;
        //reverse -> true -> before
        // reverse -> false -> next
        bool reverse = true;

        public : 
            BSTIterator(TreeNode* root,bool isReverse){
                reverse = isReverse;
                pushAll(root);
            }

            bool hasNext(){
                return !myStack.empty();
            }

            int next(){
                TreeNode* tmpNode = myStack.top();
                myStack.pop();
                if(!reverse) pushAll(tmpNode->right);
                else pushAll(tmpNode->left);
                return tmpNode->val;
            }

        private : 
            void pushAll(TreeNode* node){
                for(;node!=NULL;){
                    myStack.push(node);
                    if(reverse == true){
                        node = node->right;
                    }
                    else{
                        node = node->left;
                    }
                }
            }
    };